{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mikaela\\\\drivcon\\\\drivcon-remote\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport logo from '../drivcon_logo.png';\nimport whiteLogo from '../drivcon_white.png';\n\n// Firebase configuration for your application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB7tlY9bDGWxRPVTcPlZ8WbjMMyunIb5vE',\n  authDomain: 'drivcon-f00f7.firebaseapp.com',\n  projectId: 'drivcon-f00f7'\n  // ... other Firebase configurations\n};\n\n// Initialize Firebase if it hasn't been already\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\n// Login component\nconst Login = _ref => {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  // State variables for login form inputs and error messages\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  // useNavigate hook to allow for redirection after successful login\n  const navigate = useNavigate();\n\n  // Listen for changes in the user's authentication state\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // If a user is logged in, run the onLogin function and redirect to the portal page\n        onLogin();\n        navigate('/portal');\n      }\n    });\n\n    // Clean up the subscription to prevent memory leaks\n    return () => unsubscribe();\n  }, [navigate, onLogin]);\n\n  // Handle form input changes to update state variables\n  const handleLoginEmailChange = e => setLoginEmail(e.target.value);\n  const handleLoginPasswordChange = e => {\n    const input = e.target.value;\n    if (/^\\d{0,6}$/.test(input)) {\n      setLoginPassword(input);\n    }\n  };\n  const handleKeyPress = e => {\n    const charCode = e.which ? e.which : e.keyCode;\n    if (charCode < 48 || charCode > 57) {\n      e.preventDefault();\n    }\n  };\n\n  // Handle form submission for login\n  const handleLogin = e => {\n    e.preventDefault(); // Prevent the form from reloading the page\n    firebase.auth() // Get the Firebase authentication service\n    .signInWithEmailAndPassword(loginEmail, loginPassword) // Sign in the user with the provided email and password\n    .then(userCredential => {\n      // This block is executed when the login is successful\n      const user = userCredential.user;\n      console.log('Logged in:', user);\n      onLogin();\n      navigate('/portal');\n    }).catch(error => {\n      // This block is executed if there's an error during login\n      console.error(error);\n      setLoginError('Invalid email or password. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authFormContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"authText\",\n        children: \"WELCOME TO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"logoAuth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"authText2\",\n        children: \"Login to get updates and monitor every patient's IV fluid status.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"formAuth\",\n            type: \"email\",\n            value: loginEmail,\n            onChange: handleLoginEmailChange,\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"formAuth\",\n            type: \"password\",\n            pattern: \"\\\\d{6}\",\n            value: loginPassword,\n            onChange: handleLoginPasswordChange,\n            onKeyPress: handleKeyPress,\n            placeholder: \"Pin Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"authButton\",\n          type: \"submit\",\n          children: \"LOG IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"authError\",\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Not yet registered? \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"authLink\",\n          to: '/register',\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authBG\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: whiteLogo,\n        alt: \"white-logo\",\n        className: \"logoAuth2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"authText3\",\n        children: \"Get convenience for infusion monitoring. Designed for nurses to easily track their patient's IV fluid status.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"2c6zbyYxuFmZ5RdmgOQq8cyrZpo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","firebase","Link","useNavigate","logo","whiteLogo","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","apps","length","initializeApp","Login","_ref","_s","onLogin","loginEmail","setLoginEmail","loginPassword","setLoginPassword","loginError","setLoginError","navigate","unsubscribe","auth","onAuthStateChanged","user","handleLoginEmailChange","e","target","value","handleLoginPasswordChange","input","test","handleKeyPress","charCode","which","keyCode","preventDefault","handleLogin","signInWithEmailAndPassword","then","userCredential","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","onSubmit","type","onChange","placeholder","pattern","onKeyPress","to","alt","_c","$RefreshReg$"],"sources":["C:/Users/Mikaela/drivcon/drivcon-remote/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../drivcon_logo.png';\r\nimport whiteLogo from '../drivcon_white.png';\r\n\r\n// Firebase configuration for your application\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyB7tlY9bDGWxRPVTcPlZ8WbjMMyunIb5vE',\r\n    authDomain: 'drivcon-f00f7.firebaseapp.com',\r\n    projectId: 'drivcon-f00f7',\r\n    // ... other Firebase configurations\r\n};\r\n\r\n// Initialize Firebase if it hasn't been already\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// Login component\r\nconst Login = ({ onLogin }) => {\r\n    // State variables for login form inputs and error messages\r\n    const [loginEmail, setLoginEmail] = useState('');\r\n    const [loginPassword, setLoginPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    // useNavigate hook to allow for redirection after successful login\r\n    const navigate = useNavigate();\r\n\r\n    // Listen for changes in the user's authentication state\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                // If a user is logged in, run the onLogin function and redirect to the portal page\r\n                onLogin();\r\n                navigate('/portal');\r\n            }\r\n        });\r\n\r\n        // Clean up the subscription to prevent memory leaks\r\n        return () => unsubscribe();\r\n    }, [navigate, onLogin]);\r\n\r\n    // Handle form input changes to update state variables\r\n    const handleLoginEmailChange = (e) => setLoginEmail(e.target.value);\r\n    const handleLoginPasswordChange = (e) => {\r\n        const input = e.target.value;\r\n        if (/^\\d{0,6}$/.test(input)) {\r\n            setLoginPassword(input);\r\n        }\r\n    };\r\n    const handleKeyPress = (e) => {\r\n        const charCode = e.which ? e.which : e.keyCode;\r\n        if (charCode < 48 || charCode > 57) {\r\n          e.preventDefault();\r\n        }\r\n    };\r\n\r\n    // Handle form submission for login\r\n    const handleLogin = (e) => {\r\n        e.preventDefault(); // Prevent the form from reloading the page\r\n        firebase\r\n            .auth() // Get the Firebase authentication service\r\n            .signInWithEmailAndPassword(loginEmail, loginPassword) // Sign in the user with the provided email and password\r\n            .then((userCredential) => {\r\n                // This block is executed when the login is successful\r\n                const user = userCredential.user;\r\n                console.log('Logged in:', user);\r\n                onLogin();\r\n                navigate('/portal');\r\n            })\r\n            .catch((error) => {\r\n                // This block is executed if there's an error during login\r\n                console.error(error);\r\n                setLoginError('Invalid email or password. Please try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='Auth'>\r\n            <div className='authFormContainer'>\r\n            <p className='authText'>WELCOME TO</p>\r\n                <img src={logo} className='logoAuth'></img>\r\n                <p className='authText2'>Login to get updates and monitor every patient's IV fluid status.</p>\r\n                <form onSubmit={handleLogin}>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"email\"\r\n                            value={loginEmail}\r\n                            onChange={handleLoginEmailChange}\r\n                            placeholder='Email'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"password\"\r\n                            pattern=\"\\d{6}\"\r\n                            value={loginPassword}\r\n                            onChange={handleLoginPasswordChange}\r\n                            onKeyPress={handleKeyPress}\r\n                            placeholder='Pin Code'\r\n                        />\r\n                    </div>\r\n                    <button className='authButton' type=\"submit\">LOG IN</button>\r\n                </form>\r\n                {loginError && <p className='authError'>{loginError}</p>}\r\n                <p>Not yet registered? <Link className='authLink' to={'/register'}>Create an account</Link></p>\r\n            </div>\r\n            <div className='authBG'>\r\n            <img src={whiteLogo} alt='white-logo' className='logoAuth2'></img>\r\n                <p className='authText3'>Get convenience for infusion monitoring. Designed for nurses to easily track their patient's IV fluid status.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,IAAI,MAAM,qBAAqB;AACtC,OAAOC,SAAS,MAAM,sBAAsB;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,+BAA+B;EAC3CC,SAAS,EAAE;EACX;AACJ,CAAC;;AAED;AACA,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACC,MAAM,EAAE;EACvBZ,QAAQ,CAACa,aAAa,CAACN,cAAc,CAAC;AAC1C;;AAEA;AACA,MAAMO,KAAK,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACtB;EACA,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM0B,QAAQ,GAAGtB,WAAW,EAAE;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACZ,MAAM0B,WAAW,GAAGzB,QAAQ,CAAC0B,IAAI,EAAE,CAACC,kBAAkB,CAACC,IAAI,IAAI;MAC3D,IAAIA,IAAI,EAAE;QACN;QACAX,OAAO,EAAE;QACTO,QAAQ,CAAC,SAAS,CAAC;MACvB;IACJ,CAAC,CAAC;;IAEF;IACA,OAAO,MAAMC,WAAW,EAAE;EAC9B,CAAC,EAAE,CAACD,QAAQ,EAAEP,OAAO,CAAC,CAAC;;EAEvB;EACA,MAAMY,sBAAsB,GAAIC,CAAC,IAAKX,aAAa,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnE,MAAMC,yBAAyB,GAAIH,CAAC,IAAK;IACrC,MAAMI,KAAK,GAAGJ,CAAC,CAACC,MAAM,CAACC,KAAK;IAC5B,IAAI,WAAW,CAACG,IAAI,CAACD,KAAK,CAAC,EAAE;MACzBb,gBAAgB,CAACa,KAAK,CAAC;IAC3B;EACJ,CAAC;EACD,MAAME,cAAc,GAAIN,CAAC,IAAK;IAC1B,MAAMO,QAAQ,GAAGP,CAAC,CAACQ,KAAK,GAAGR,CAAC,CAACQ,KAAK,GAAGR,CAAC,CAACS,OAAO;IAC9C,IAAIF,QAAQ,GAAG,EAAE,IAAIA,QAAQ,GAAG,EAAE,EAAE;MAClCP,CAAC,CAACU,cAAc,EAAE;IACpB;EACJ,CAAC;;EAED;EACA,MAAMC,WAAW,GAAIX,CAAC,IAAK;IACvBA,CAAC,CAACU,cAAc,EAAE,CAAC,CAAC;IACpBxC,QAAQ,CACH0B,IAAI,EAAE,CAAC;IAAA,CACPgB,0BAA0B,CAACxB,UAAU,EAAEE,aAAa,CAAC,CAAC;IAAA,CACtDuB,IAAI,CAAEC,cAAc,IAAK;MACtB;MACA,MAAMhB,IAAI,GAAGgB,cAAc,CAAChB,IAAI;MAChCiB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAElB,IAAI,CAAC;MAC/BX,OAAO,EAAE;MACTO,QAAQ,CAAC,SAAS,CAAC;IACvB,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;MACd;MACAH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACpBzB,aAAa,CAAC,8CAA8C,CAAC;IACjE,CAAC,CAAC;EACV,CAAC;EAED,oBACIjB,OAAA;IAAK2C,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjB5C,OAAA;MAAK2C,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAClC5C,OAAA;QAAG2C,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAClChD,OAAA;QAAKiD,GAAG,EAAEpD,IAAK;QAAC8C,SAAS,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC3ChD,OAAA;QAAG2C,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAiE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC9FhD,OAAA;QAAMkD,QAAQ,EAAEf,WAAY;QAAAS,QAAA,gBACxB5C,OAAA;UAAA4C,QAAA,eACI5C,OAAA;YACI2C,SAAS,EAAC,UAAU;YACpBQ,IAAI,EAAC,OAAO;YACZzB,KAAK,EAAEd,UAAW;YAClBwC,QAAQ,EAAE7B,sBAAuB;YACjC8B,WAAW,EAAC;UAAO;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACrB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACA,eACNhD,OAAA;UAAA4C,QAAA,eACI5C,OAAA;YACI2C,SAAS,EAAC,UAAU;YACpBQ,IAAI,EAAC,UAAU;YACfG,OAAO,EAAC,QAAO;YACf5B,KAAK,EAAEZ,aAAc;YACrBsC,QAAQ,EAAEzB,yBAA0B;YACpC4B,UAAU,EAAEzB,cAAe;YAC3BuB,WAAW,EAAC;UAAU;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACxB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACA,eACNhD,OAAA;UAAQ2C,SAAS,EAAC,YAAY;UAACQ,IAAI,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzD,EACNhC,UAAU,iBAAIhB,OAAA;QAAG2C,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAE5B;MAAU;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxDhD,OAAA;QAAA4C,QAAA,GAAG,sBAAoB,eAAA5C,OAAA,CAACL,IAAI;UAACgD,SAAS,EAAC,UAAU;UAACa,EAAE,EAAE,WAAY;UAAAZ,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7F,eACNhD,OAAA;MAAK2C,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACvB5C,OAAA;QAAKiD,GAAG,EAAEnD,SAAU;QAAC2D,GAAG,EAAC,YAAY;QAACd,SAAS,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC9DhD,OAAA;QAAG2C,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAA6G;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAACtC,EAAA,CAhGIF,KAAK;EAAA,QAOUZ,WAAW;AAAA;AAAA8D,EAAA,GAP1BlD,KAAK;AAkGX,eAAeA,KAAK;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}