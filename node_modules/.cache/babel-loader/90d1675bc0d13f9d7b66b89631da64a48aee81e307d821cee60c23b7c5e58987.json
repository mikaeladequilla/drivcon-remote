{"ast":null,"code":"import _slicedToArray from\"C:/Users/Mikaela/drivcon-remote/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import firebase from'firebase/compat/app';import'firebase/compat/auth';import{Link,useNavigate}from'react-router-dom';import logo from'../drivcon_logo.png';import whiteLogo from'../drivcon_white.png';// Firebase configuration for your application\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var firebaseConfig={apiKey:'AIzaSyB7tlY9bDGWxRPVTcPlZ8WbjMMyunIb5vE',authDomain:'drivcon-f00f7.firebaseapp.com',projectId:'drivcon-f00f7'// ... other Firebase configurations\n};// Initialize Firebase if it hasn't been already\nif(!firebase.apps.length){firebase.initializeApp(firebaseConfig);}// Login component\nvar Login=function Login(_ref){var onLogin=_ref.onLogin;// State variables for login form inputs and error messages\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),loginEmail=_useState2[0],setLoginEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),loginPassword=_useState4[0],setLoginPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),loginError=_useState6[0],setLoginError=_useState6[1];// useNavigate hook to allow for redirection after successful login\nvar navigate=useNavigate();// Listen for changes in the user's authentication state\nuseEffect(function(){var unsubscribe=firebase.auth().onAuthStateChanged(function(user){if(user){// If a user is logged in, run the onLogin function and redirect to the portal page\nonLogin();navigate('/portal');}});// Clean up the subscription to prevent memory leaks\nreturn function(){return unsubscribe();};},[navigate,onLogin]);// Handle form input changes to update state variables\nvar handleLoginEmailChange=function handleLoginEmailChange(e){return setLoginEmail(e.target.value);};var handleLoginPasswordChange=function handleLoginPasswordChange(e){var input=e.target.value;if(/^\\d{0,6}$/.test(input)){setLoginPassword(input);}};var handleKeyPress=function handleKeyPress(e){var charCode=e.which?e.which:e.keyCode;if(charCode<48||charCode>57){e.preventDefault();}};// Handle form submission for login\nvar handleLogin=function handleLogin(e){e.preventDefault();// Prevent the form from reloading the page\nfirebase.auth()// Get the Firebase authentication service\n.signInWithEmailAndPassword(loginEmail,loginPassword)// Sign in the user with the provided email and password\n.then(function(userCredential){// This block is executed when the login is successful\nvar user=userCredential.user;console.log('Logged in:',user);onLogin();navigate('/portal');}).catch(function(error){// This block is executed if there's an error during login\nconsole.error(error);setLoginError('Invalid email or password. Please try again.');});};return/*#__PURE__*/_jsxs(\"div\",{className:\"Auth\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"authFormContainer\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"authText\",children:\"WELCOME TO\"}),/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"logoAuth\"}),/*#__PURE__*/_jsx(\"p\",{className:\"authText2\",children:\"Login to get updates and monitor every patient's IV fluid status.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"formAuth\",type:\"email\",value:loginEmail,onChange:handleLoginEmailChange,placeholder:\"Email\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"formAuth\",type:\"password\",pattern:\"\\\\d{6}\",value:loginPassword,onChange:handleLoginPasswordChange,onKeyPress:handleKeyPress,placeholder:\"Pin Code\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"authButton\",type:\"submit\",children:\"LOG IN\"})]}),loginError&&/*#__PURE__*/_jsx(\"p\",{className:\"authError\",children:loginError}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Not yet registered? \",/*#__PURE__*/_jsx(Link,{className:\"authLink\",to:'/register',children:\"Create an account\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"authBG\",children:[/*#__PURE__*/_jsx(\"img\",{src:whiteLogo,alt:\"white-logo\",className:\"logoAuth2\"}),/*#__PURE__*/_jsx(\"p\",{className:\"authText3\",children:\"Get convenience for infusion monitoring. Designed for nurses to easily track their patient's IV fluid status.\"})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","firebase","Link","useNavigate","logo","whiteLogo","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","projectId","apps","length","initializeApp","Login","_ref","onLogin","_useState","_useState2","_slicedToArray","loginEmail","setLoginEmail","_useState3","_useState4","loginPassword","setLoginPassword","_useState5","_useState6","loginError","setLoginError","navigate","unsubscribe","auth","onAuthStateChanged","user","handleLoginEmailChange","e","target","value","handleLoginPasswordChange","input","test","handleKeyPress","charCode","which","keyCode","preventDefault","handleLogin","signInWithEmailAndPassword","then","userCredential","console","log","catch","error","className","children","src","onSubmit","type","onChange","placeholder","pattern","onKeyPress","to","alt"],"sources":["C:/Users/Mikaela/drivcon-remote/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../drivcon_logo.png';\r\nimport whiteLogo from '../drivcon_white.png';\r\n\r\n// Firebase configuration for your application\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyB7tlY9bDGWxRPVTcPlZ8WbjMMyunIb5vE',\r\n    authDomain: 'drivcon-f00f7.firebaseapp.com',\r\n    projectId: 'drivcon-f00f7',\r\n    // ... other Firebase configurations\r\n};\r\n\r\n// Initialize Firebase if it hasn't been already\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// Login component\r\nconst Login = ({ onLogin }) => {\r\n    // State variables for login form inputs and error messages\r\n    const [loginEmail, setLoginEmail] = useState('');\r\n    const [loginPassword, setLoginPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    // useNavigate hook to allow for redirection after successful login\r\n    const navigate = useNavigate();\r\n\r\n    // Listen for changes in the user's authentication state\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                // If a user is logged in, run the onLogin function and redirect to the portal page\r\n                onLogin();\r\n                navigate('/portal');\r\n            }\r\n        });\r\n\r\n        // Clean up the subscription to prevent memory leaks\r\n        return () => unsubscribe();\r\n    }, [navigate, onLogin]);\r\n\r\n    // Handle form input changes to update state variables\r\n    const handleLoginEmailChange = (e) => setLoginEmail(e.target.value);\r\n    const handleLoginPasswordChange = (e) => {\r\n        const input = e.target.value;\r\n        if (/^\\d{0,6}$/.test(input)) {\r\n            setLoginPassword(input);\r\n        }\r\n    };\r\n    const handleKeyPress = (e) => {\r\n        const charCode = e.which ? e.which : e.keyCode;\r\n        if (charCode < 48 || charCode > 57) {\r\n          e.preventDefault();\r\n        }\r\n    };\r\n\r\n    // Handle form submission for login\r\n    const handleLogin = (e) => {\r\n        e.preventDefault(); // Prevent the form from reloading the page\r\n        firebase\r\n            .auth() // Get the Firebase authentication service\r\n            .signInWithEmailAndPassword(loginEmail, loginPassword) // Sign in the user with the provided email and password\r\n            .then((userCredential) => {\r\n                // This block is executed when the login is successful\r\n                const user = userCredential.user;\r\n                console.log('Logged in:', user);\r\n                onLogin();\r\n                navigate('/portal');\r\n            })\r\n            .catch((error) => {\r\n                // This block is executed if there's an error during login\r\n                console.error(error);\r\n                setLoginError('Invalid email or password. Please try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='Auth'>\r\n            <div className='authFormContainer'>\r\n            <p className='authText'>WELCOME TO</p>\r\n                <img src={logo} className='logoAuth'></img>\r\n                <p className='authText2'>Login to get updates and monitor every patient's IV fluid status.</p>\r\n                <form onSubmit={handleLogin}>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"email\"\r\n                            value={loginEmail}\r\n                            onChange={handleLoginEmailChange}\r\n                            placeholder='Email'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"password\"\r\n                            pattern=\"\\d{6}\"\r\n                            value={loginPassword}\r\n                            onChange={handleLoginPasswordChange}\r\n                            onKeyPress={handleKeyPress}\r\n                            placeholder='Pin Code'\r\n                        />\r\n                    </div>\r\n                    <button className='authButton' type=\"submit\">LOG IN</button>\r\n                </form>\r\n                {loginError && <p className='authError'>{loginError}</p>}\r\n                <p>Not yet registered? <Link className='authLink' to={'/register'}>Create an account</Link></p>\r\n            </div>\r\n            <div className='authBG'>\r\n            <img src={whiteLogo} alt='white-logo' className='logoAuth2'></img>\r\n                <p className='authText3'>Get convenience for infusion monitoring. Designed for nurses to easily track their patient's IV fluid status.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}