[{"C:\\Users\\Mikaela\\drivcon-remote\\src\\index.js":"1","C:\\Users\\Mikaela\\drivcon-remote\\src\\reportWebVitals.js":"2","C:\\Users\\Mikaela\\drivcon-remote\\src\\App.js":"3","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Login.js":"4","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Portal.js":"5","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Register.js":"6","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Home.js":"7","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\OurTeam.js":"8"},{"size":552,"mtime":1688043063389,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1688043063397,"results":"11","hashOfConfig":"10"},{"size":1122,"mtime":1688043063329,"results":"12","hashOfConfig":"10"},{"size":4876,"mtime":1688043063338,"results":"13","hashOfConfig":"10"},{"size":12142,"mtime":1688043063356,"results":"14","hashOfConfig":"10"},{"size":5342,"mtime":1688043063363,"results":"15","hashOfConfig":"10"},{"size":1286,"mtime":1688043063332,"results":"16","hashOfConfig":"10"},{"size":4779,"mtime":1688043063355,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"au6nye",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mikaela\\drivcon-remote\\src\\index.js",[],[],"C:\\Users\\Mikaela\\drivcon-remote\\src\\reportWebVitals.js",[],[],"C:\\Users\\Mikaela\\drivcon-remote\\src\\App.js",[],[],"C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Login.js",["45"],[],"import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../drivcon_logo.png';\r\nimport whiteLogo from '../drivcon_white.png';\r\n\r\n// Firebase configuration for your application\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyB7tlY9bDGWxRPVTcPlZ8WbjMMyunIb5vE',\r\n    authDomain: 'drivcon-f00f7.firebaseapp.com',\r\n    projectId: 'drivcon-f00f7',\r\n    // ... other Firebase configurations\r\n};\r\n\r\n// Initialize Firebase if it hasn't been already\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// Login component\r\nconst Login = ({ onLogin }) => {\r\n    // State variables for login form inputs and error messages\r\n    const [loginEmail, setLoginEmail] = useState('');\r\n    const [loginPassword, setLoginPassword] = useState('');\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    // useNavigate hook to allow for redirection after successful login\r\n    const navigate = useNavigate();\r\n\r\n    // Listen for changes in the user's authentication state\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                // If a user is logged in, run the onLogin function and redirect to the portal page\r\n                onLogin();\r\n                navigate('/portal');\r\n            }\r\n        });\r\n\r\n        // Clean up the subscription to prevent memory leaks\r\n        return () => unsubscribe();\r\n    }, [navigate, onLogin]);\r\n\r\n    // Handle form input changes to update state variables\r\n    const handleLoginEmailChange = (e) => setLoginEmail(e.target.value);\r\n    const handleLoginPasswordChange = (e) => {\r\n        const input = e.target.value;\r\n        if (/^\\d{0,6}$/.test(input)) {\r\n            setLoginPassword(input);\r\n        }\r\n    };\r\n    const handleKeyPress = (e) => {\r\n        const charCode = e.which ? e.which : e.keyCode;\r\n        if (charCode < 48 || charCode > 57) {\r\n          e.preventDefault();\r\n        }\r\n    };\r\n\r\n    // Handle form submission for login\r\n    const handleLogin = (e) => {\r\n        e.preventDefault(); // Prevent the form from reloading the page\r\n        firebase\r\n            .auth() // Get the Firebase authentication service\r\n            .signInWithEmailAndPassword(loginEmail, loginPassword) // Sign in the user with the provided email and password\r\n            .then((userCredential) => {\r\n                // This block is executed when the login is successful\r\n                const user = userCredential.user;\r\n                console.log('Logged in:', user);\r\n                onLogin();\r\n                navigate('/portal');\r\n            })\r\n            .catch((error) => {\r\n                // This block is executed if there's an error during login\r\n                console.error(error);\r\n                setLoginError('Invalid email or password. Please try again.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='Auth'>\r\n            <div className='authFormContainer'>\r\n            <p className='authText'>WELCOME TO</p>\r\n                <img src={logo} className='logoAuth'></img>\r\n                <p className='authText2'>Login to get updates and monitor every patient's IV fluid status.</p>\r\n                <form onSubmit={handleLogin}>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"email\"\r\n                            value={loginEmail}\r\n                            onChange={handleLoginEmailChange}\r\n                            placeholder='Email'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"password\"\r\n                            pattern=\"\\d{6}\"\r\n                            value={loginPassword}\r\n                            onChange={handleLoginPasswordChange}\r\n                            onKeyPress={handleKeyPress}\r\n                            placeholder='Pin Code'\r\n                        />\r\n                    </div>\r\n                    <button className='authButton' type=\"submit\">LOG IN</button>\r\n                </form>\r\n                {loginError && <p className='authError'>{loginError}</p>}\r\n                <p>Not yet registered? <Link className='authLink' to={'/register'}>Create an account</Link></p>\r\n            </div>\r\n            <div className='authBG'>\r\n            <img src={whiteLogo} alt='white-logo' className='logoAuth2'></img>\r\n                <p className='authText3'>Get convenience for infusion monitoring. Designed for nurses to easily track their patient's IV fluid status.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Portal.js",[],[],"C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Register.js",["46"],[],"import React, { useState } from 'react';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport whiteLogo from '../drivcon_white.png';\r\nimport logo from '../drivcon_logo.png';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyB7tlY9bDGWxRPVTcPlZ8WbjMMyunIb5vE',\r\n    authDomain: 'drivcon-f00f7.firebaseapp.com',\r\n    projectId: 'drivcon-f00f7',\r\n    // ... other Firebase configurations\r\n};\r\n\r\n// Initialize Firebase if not already initialized\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst Register = () => {\r\n    const [signupFName, setSignupFName] = useState('');\r\n    const [signupLName, setSignupLName] = useState('');\r\n    const [signupEmail, setSignupEmail] = useState('');\r\n    const [signupPassword, setSignupPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Handle chages in form fields\r\n    const handleSignupFNameChange = (e) => {\r\n        setSignupFName(e.target.value);\r\n    }\r\n\r\n    const handleSignupLNameChange = (e) => {\r\n        setSignupLName(e.target.value);\r\n    }\r\n\r\n    const handleSignupEmailChange = (e) => {\r\n        setSignupEmail(e.target.value);\r\n    };\r\n\r\n    const handleSignupPasswordChange = (e) => {\r\n        const input = e.target.value;\r\n        if (/^\\d{0,6}$/.test(input)) { // Check if input is a number with max 6 digits\r\n            setSignupPassword(input);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        const charCode = e.which ? e.which : e.keyCode;\r\n        // Prevent non-digit character input\r\n        if (charCode < 48 || charCode > 57) {\r\n          e.preventDefault();\r\n        }\r\n      };\r\n\r\n      const handleSignUp = (e) => {\r\n        e.preventDefault(); // Prevent the form from reloading the page\r\n        firebase\r\n        .auth() // Get the Firebase authentication service\r\n        .createUserWithEmailAndPassword(signupEmail, signupPassword) // Create a new user with the provided email and password\r\n        .then((userCredential) => {\r\n            // This block is executed when the user is successfully created\r\n            const user = userCredential.user; // The user's data\r\n            console.log('Signed up:', user); // Log the user's data to the console\r\n    \r\n            // Update the user's display name with the entered first and last names\r\n            user.updateProfile({\r\n                displayName: signupFName + ' ' + signupLName,\r\n          });\r\n    \r\n            // Navigate to the login page\r\n            navigate('/login');\r\n        })\r\n        .catch((error) => {\r\n            // This block is executed if there's an error creating the user\r\n            console.error(error); // Log the error to the console\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='Auth'>\r\n            <div className='authFormContainer'>\r\n                <p className='authText'>WELCOME TO</p>\r\n                <img src={logo} className='logoAuth'></img>\r\n                <p className='authText2'>Register to get updates and monitor every patient's IV fluid status.</p>\r\n                <form onSubmit={handleSignUp}>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"text\"\r\n                            value={signupFName}\r\n                            onChange={handleSignupFNameChange}\r\n                            placeholder='First name'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"text\"\r\n                            value={signupLName}\r\n                            onChange={handleSignupLNameChange}\r\n                            placeholder='Last name'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"email\"\r\n                            value={signupEmail}\r\n                            onChange={handleSignupEmailChange}\r\n                            placeholder='Email'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            className=\"formAuth\"\r\n                            type=\"password\"\r\n                            pattern=\"\\d{6}\"\r\n                            value={signupPassword}\r\n                            onChange={handleSignupPasswordChange}\r\n                            onKeyPress={handleKeyPress}\r\n                            placeholder='Pin Code'\r\n                        />\r\n                    </div>\r\n                    <button className='authButton' type=\"submit\">REGISTER</button>\r\n                </form>\r\n                <p>Have an account already? <Link className='authLink' to={'/login'}>Log in</Link></p>\r\n            </div>\r\n            <div className='authBG'>\r\n                <img src={whiteLogo} alt='white-logo' className='logoAuth2'></img>\r\n                <p className='authText3'>Get convenience for infusion monitoring. Designed for nurses to easily track their patient's IV fluid status.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\Home.js",["47"],[],"import { Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport nurse from \"../nurse.png\";\r\nimport logo from '../drivcon_logo.png';\r\n\r\nfunction Home() {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"Home\">\r\n                <li>\r\n                    <ul><Link to='/our-team' className=\"link\">Our Team</Link></ul>\r\n                    <ul><Link to='/portal' className=\"link\">Portal</Link></ul>\r\n                </li>\r\n                <div className=\"home-content\">\r\n                    <div className=\"home-text\">\r\n                        <p className=\"home-header\">Get convenience for infusion monitoring.</p>\r\n                        <p className=\"home-par\">Designed for nurses to easily track their patient’s IV fluid status.</p>\r\n                        <Link to=\"/portal\"><Button className=\"portal-btn\">Try it now</Button></Link>\r\n                    </div>\r\n                    <img src={nurse} className=\"nurse\" alt=\"nurse\"></img>\r\n                </div>\r\n            </div>\r\n            <footer>\r\n                <img src={logo} alt='drivcon' className='App-logo'/>\r\n                <p>© Drivcon. 2023 All rights reserved.</p>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Mikaela\\drivcon-remote\\src\\components\\OurTeam.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":84,"column":17,"nodeType":"50","endLine":84,"endColumn":54},{"ruleId":"48","severity":1,"message":"49","line":83,"column":17,"nodeType":"50","endLine":83,"endColumn":54},{"ruleId":"51","severity":1,"message":"52","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":18},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]